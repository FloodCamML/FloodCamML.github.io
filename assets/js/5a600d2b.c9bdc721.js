(self.webpackChunkfloodcamml=self.webpackChunkfloodcamml||[]).push([[452],{189:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=o(2122),n=o(9756),i=(o(7294),o(3905)),r=["components"],l={sidebar_position:6},s={unversionedId:"tutorial/deployment",id:"tutorial/deployment",isDocsHomePage:!1,title:"Deployment",description:"Deploy your CamML app from within RStudio to shinyapps.io or as a Docker image to Google Cloud Run.",source:"@site/docs/tutorial/deployment.md",sourceDirName:"tutorial",slug:"/tutorial/deployment",permalink:"/docs/tutorial/deployment",editUrl:"https://github.com/FloodCamML/docs/tutorial/deployment.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Customizing the app",permalink:"/docs/tutorial/customize-app"},next:{title:"Citing CamML",permalink:"/docs/citing-camml"}},p=[{value:"Shinyapps.io",id:"shinyappsio",children:[]},{value:"Google Cloud Run",id:"google-cloud-run",children:[{value:"Step 1",id:"step-1",children:[]},{value:"Step 2",id:"step-2",children:[]},{value:"Step 3",id:"step-3",children:[]},{value:"Step 4",id:"step-4",children:[]},{value:"Step 5",id:"step-5",children:[]},{value:"Resources",id:"resources",children:[]}]}],d={toc:p};function c(e){var t=e.components,o=(0,n.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Deploy your CamML app from within RStudio to ",(0,i.kt)("a",{parentName:"p",href:"https://www.shinyapps.io/"},"shinyapps.io")," or as a Docker image to ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/run"},"Google Cloud Run"),"."),(0,i.kt)("h2",{id:"shinyappsio"},"Shinyapps.io"),(0,i.kt)("p",null,"RStudio has some great docs about shinyapps.io, so check out ",(0,i.kt)("a",{parentName:"p",href:"https://docs.rstudio.com/shinyapps.io/getting-started.html"},"their documentation")," to read about how to deploy an app."),(0,i.kt)("h2",{id:"google-cloud-run"},"Google Cloud Run"),(0,i.kt)("p",null,"Google also has some good docs about deploying a container, but we'll walk through this one since they don't have an R-specific example."),(0,i.kt)("h3",{id:"step-1"},"Step 1"),(0,i.kt)("p",null,"Install the ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/sdk/docs/install"},"Google Cloud SDK")," which includes some command line tools that we'll need."),(0,i.kt)("h3",{id:"step-2"},"Step 2"),(0,i.kt)("p",null,"Navigate to your IDE (I'm using VS Code). Open your project folder (the code template GitHub repo folder) in your IDE (",(0,i.kt)("strong",{parentName:"p"},"Open Folder")," in VS Code). Create a PowerShell terminal (",(0,i.kt)("strong",{parentName:"p"},"Terminal < New Terminal"),") and type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker build -t gcr.io/{project name}/{image name}:latest .\n")),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"{project name}")," is the name of the project you created on Google Cloud Console, and ",(0,i.kt)("inlineCode",{parentName:"p"},"{image name}")," is the name of the image (whatever you want!). This code tells Docker to build an image (",(0,i.kt)("inlineCode",{parentName:"p"},"docker build"),") with the Dockerfile in the open folder (that's what the ",(0,i.kt)("inlineCode",{parentName:"p"},".")," at the end means) and name it as the latest image called ",(0,i.kt)("inlineCode",{parentName:"p"},"gcr.io/{project name}/{image name}"),"."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Running your Docker image locally")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can run your Docker image locally with Docker Desktop, just make sure to specify the local port as ",(0,i.kt)("strong",{parentName:"p"},"3838")," to match the container port. For local testing, you can name your image something else like:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"docker build -t flood-camml-test\n")))),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Using Docker Hub or public container repos")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Be careful if you want to upload your image to a public container repository such as Docker Hub - Code for your app contains secret keys that allow access to your Google Account. These keys are ignored by GitHub thanks to the ",(0,i.kt)("inlineCode",{parentName:"p"},".gitignore")," but could be accessed if someone downloads your container image."))),(0,i.kt)("h3",{id:"step-3"},"Step 3"),(0,i.kt)("p",null,"Push the image to the Google Cloud Container Registry using the following code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker push gcr.io/{project name}/{image name}:latest\n")),(0,i.kt)("h3",{id:"step-4"},"Step 4"),(0,i.kt)("p",null,"Navigate to Google Cloud Console and select your project. On the left-hand navigation menu, scroll down to Google Cloud Run and select the tab. On the Google Cloud Run tab, select ",(0,i.kt)("inlineCode",{parentName:"p"},"Create Service"),". "),(0,i.kt)("p",null,"Follow the prompt to name the service and select the region. To ",(0,i.kt)("strong",{parentName:"p"},"Configure the service's first revision"),", use the default selection of ",(0,i.kt)("strong",{parentName:"p"},"Deploy one revision from an existing container image")," and click ",(0,i.kt)("strong",{parentName:"p"},"Select")," to select a container image URL. On the right-hand side of the screen, you will see a sidebar appear of available container options - select the image that you pushed to the registry."),(0,i.kt)("p",null,"Under ",(0,i.kt)("strong",{parentName:"p"},"Advanced settings"),", set the container port to ",(0,i.kt)("strong",{parentName:"p"},"3838"),", set the memory capacity to ",(0,i.kt)("strong",{parentName:"p"},"2 GiB"),", and set the minimum and maximum number of instances to ",(0,i.kt)("strong",{parentName:"p"},"1"),"."),(0,i.kt)("p",null,"Click ",(0,i.kt)("strong",{parentName:"p"},"Deploy"),"!"),(0,i.kt)("h3",{id:"step-5"},"Step 5"),(0,i.kt)("p",null,"Party! \ud83c\udf89 Your app is now live!"),(0,i.kt)("h3",{id:"resources"},"Resources"),(0,i.kt)("p",null,"Google Tutorial - ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/run/docs/quickstarts/build-and-deploy/other"},"Build and deploy a service in other languages")))}c.isMDXComponent=!0}}]);